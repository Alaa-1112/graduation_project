import 'package:flutter/material.dart';
import 'package:youtube_player_flutter/youtube_player_flutter.dart';

class MathVideo extends StatefulWidget {
  const MathVideo({super.key});

  @override
  State<MathVideo> createState() => _MathVideoState();
}

class _MathVideoState extends State<MathVideo> {
  List<YoutubePlayerController> _controllers = [];

  final List<Map<String, String>> videoData = [
    {
      'url': 'https://youtu.be/Zx7QcpyhKHc',
      'description': 'ÿ™ÿπŸÑŸÖ ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ ŸÖŸÜ 1 ÿ•ŸÑŸâ 10 ÿ®ÿ∑ÿ±ŸäŸÇÿ© ÿ≥ŸáŸÑÿ© Ÿà ŸÖÿ±ÿ≠ÿ© ŸÑŸÑÿ£ÿ∑ŸÅÿßŸÑ - ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ - ÿßŸÑÿ£ÿπÿØÿßÿØ',
    },
    {
      'url': 'https://youtu.be/kTHaNZSFu64',
      'description': 'Arabic Numbers 1-20 ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ Ÿ°-Ÿ¢Ÿ†',
    },
    {
      'url': 'https://youtu.be/jAc_AH9SwFY',
      'description': 'ŸÑÿ£ÿ±ŸÇÿßŸÖ ÿ®ÿßŸÑÿπÿ±ÿ®Ÿä ŸÑŸÑÿ£ÿ∑ŸÅÿßŸÑ ÿßŸÑÿµÿ∫ÿßÿ± üë∂ ŸÖŸÜ Ÿàÿßÿ≠ÿØ ŸÑÿπÿ¥ÿ±ÿ© üë∂ ÿ™ÿπŸÑŸäŸÖ ÿßŸÑÿßÿ∑ŸÅÿßŸÑ ŸÖÿπ ÿßŸÑÿ®ŸÜÿ™ ÿßŸÑÿµÿ∫Ÿäÿ±ÿ© _ numbers for kids',
    },
    {
      'url': 'https://youtu.be/JQCSlaFtVr8',
      'description': 'ŸÉÿ™ÿßÿ®ÿ© ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ ÿßŸÑÿπÿ±ÿ®Ÿäÿ© - ÿ™ÿπŸÑŸäŸÖ ŸÉÿ™ÿßÿ®ÿ© ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ŸÖŸÜ 1 ÿ•ŸÑŸâ 10 Ÿàÿ∑ÿ±ŸäŸÇÿ© ŸÜÿ∑ŸÇŸáÿß ÿ®ÿ≥ŸáŸàŸÑÿ©',
    },
    {
      'url': 'https://youtu.be/AgImfNdIJVQ',
      'description': 'ŸÑÿ£ÿ±ŸÇÿßŸÖ - ÿ™ÿ£ÿ≥Ÿäÿ≥ ŸÑŸÑÿ£ÿ∑ŸÅÿßŸÑ - ÿ®ÿßŸÑŸÑŸáÿ¨ÿ© ÿßŸÑŸÖÿµÿ±Ÿäÿ© - ÿßŸÑÿ£ÿπÿØÿßÿØ ŸÖŸÜ 1 ÿ•ŸÑŸâ 10 - Learn Numbers in Arabic for Kids',
    },
    {
      'url': 'https://youtu.be/fIMOkV63X5I',
      'description': 'Learn The Numbers In Arabic ÿ™ÿπŸÑŸÖ ÿßŸÑÿßÿ±ŸÇÿßŸÖ ÿ®ÿßŸÑÿπÿ±ÿ®Ÿäÿ© - ŸÉÿßÿ±ÿ™ŸàŸÜ ŸÑŸÑÿßÿ∑ŸÅÿßŸÑ',
    },
    {
      'url': 'https://youtu.be/71lyGg8f5HM',
      'description': 'ÿ∫ŸÜŸäÿ© ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ ( ÿ£ŸÜÿß ÿßŸÑŸàÿßÿ≠ÿØ Ÿäÿß ÿ≠ŸÑŸàŸäŸÜ) | ŸÇŸÜÿßÿ© ŸÖÿ±ÿ≠ ŸÉŸä ÿ¨Ÿä - Marah KG',
    },
    {
      'url': 'https://youtu.be/oez4IwKKiqQ',
      'description': 'ÿ£ÿ∫ŸÜŸäÿ© ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ | ÿ£ŸÜÿ¥ŸàÿØÿ© ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ ŸàÿßŸÑÿ£ÿπÿØÿßÿØ ÿßŸÑÿπÿ±ÿ®Ÿäÿ© ŸÜÿµŸÅ ÿ≥ÿßÿπÿ© ŸÖŸÜ ÿ£ÿ¨ŸÖŸÑ ÿßŸÑÿ£ÿ∫ÿßŸÜŸä ÿßŸÑÿ™ÿπŸÑŸäŸÖŸäÿ© ŸÑŸÑÿ£ÿ∑ŸÅÿßŸÑ',
    },
    {
      'url': 'https://youtu.be/oMgnx6yhs5k',
      'description': 'ŸÇŸÜÿßÿ© ÿ∑ŸÖ ÿ∑ŸÖ | ÿ£ÿ∫ŸÜŸäÿ© ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ ŸÑŸÑÿ£ÿ∑ŸÅÿßŸÑ ÿπÿ±ÿ®Ÿä - ÿßŸÜÿ¨ŸÑŸäÿ≤Ÿä',
    },
    // Add more videos as needed
  ];

  @override
  void initState() {
    super.initState();
    // Initialize the YouTube player controllers
    for (var video in videoData) {
      String? id = YoutubePlayer.convertUrlToId(video['url']!);
      if (id != null) {
        _controllers.add(YoutubePlayerController(
          initialVideoId: id,
          flags: const YoutubePlayerFlags(
            autoPlay: false,
            mute: false,
          ),
        ));
      }
    }
  }

  @override
  void dispose() {
    // Dispose all YouTube controllers
    for (var controller in _controllers) {
      controller.dispose();
    }
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Column(
        children: [
          Row(
            children: [
              Padding(
                padding: const EdgeInsets.only(left: 10.0, top: 40),
                child: IconButton(
                  onPressed: () {
                    Navigator.of(context).pop('');
                  },
                  icon: Icon(
                    Icons.arrow_back,
                    color: Colors.black,
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.only(left: 20.0, top: 40),
                child: Text(
                  "ÿ¥ÿßŸáÿØ ÿßŸÑŸÅŸäÿØŸäŸàŸáÿßÿ™ ŸÑÿ™ŸÅŸáŸÖ ÿßŸÉÿ´ÿ±",
                  style: TextStyle(
                      color: Colors.black,
                      fontSize: 27,
                      fontWeight: FontWeight.bold),
                ),
              ),
            ],
          ),
          //SizedBox(height: 20),
          Expanded(
            child: ListView.builder(
              itemCount: _controllers.length,
              itemBuilder: (context, index) {
                return GestureDetector(
                  onTap: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => VideoDetailPage(
                          controller: _controllers[index],
                          txt: videoData[index]['description']!,
                        ),
                      ),
                    );
                  },
                  child: Container(
                    margin: const EdgeInsets.all(10.0),
                    decoration: BoxDecoration(
                      border: Border.all(color: Colors.grey),
                      borderRadius: BorderRadius.circular(30),
                    ),
                    child: Column(
                      children: [
                        ClipRRect(
                          borderRadius: BorderRadius.vertical(top: Radius.circular(30)),
                          child: Image.network(
                            'https://img.youtube.com/vi/${YoutubePlayer.convertUrlToId(videoData[index]['url']!)}/0.jpg', // ÿµŸàÿ±ÿ© ÿßŸÑŸÅŸäÿØŸäŸà ÿßŸÑŸÖÿµÿ∫ÿ±ÿ©
                          ),
                        ),
                        Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text(
                            videoData[index]['description']!,
                            style: TextStyle(fontSize: 16, color: Colors.black),
                          ),
                        ),
                      ],
                    ),
                  ),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}

class VideoDetailPage extends StatelessWidget {
  final YoutubePlayerController controller;
  final String txt;

  const VideoDetailPage({super.key, required this.controller, required this.txt});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(txt),
      ),
      body: Center(
        child: YoutubePlayer(
          controller: controller,
          showVideoProgressIndicator: true,
        ),
      ),
    );
  }
}



